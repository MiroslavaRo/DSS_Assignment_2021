@model CreateProductViewModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @if (Model.ErrorMessageVisible)
        {
            <div class="alert alert-danger" role="alert">
                Model not valid
            </div>
        }
    <form enctype="multipart/form-data" asp-action="Create">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="ProductName" class="control-label"></label>
            <input asp-for="ProductName" class="form-control" />
            <span asp-validation-for="ProductName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="SelectedSupplierId" class="control-label"></label>
            <select class="form-control" asp-for="SelectedSupplierId" asp-items="Model.Suppliers">
                <option>Select Company</option>
            </select>
            <br />
            <span asp-validation-for="SelectedSupplierId" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="fileUpload">Photo</label>
            <input type="file" name="photo" class="form-control-file" id="fileUpload" />
        </div>

        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
